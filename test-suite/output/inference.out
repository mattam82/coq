P = 
fun e : option L => match e with
                    | Some cl => Some cl
                    | None => None
                    end
     : option L -> option L
fun n : nat => let x := A n : T n in ?y ?y0 : T n
     : forall n : nat, T n
where
?y : [n : nat  x := A n : T n |- ?T -> T n] 
?y0 : [n : nat  x := A n : T n |- ?T] 
fun n : nat => ?y ?y0 : T n
     : forall n : nat, T n
where
?y : [n : nat |- ?T -> T n] 
?y0 : [n : nat |- ?T] 
